--- displaylink-installer.sh.orig	2016-10-05 04:23:53.000000000 -0500
+++ displaylink-installer.sh	2016-11-27 19:19:08.536180864 -0600
@@ -11,7 +11,7 @@
 add_udev_rule()
 {
   echo "Adding udev rule for DisplayLink DL-3xxx/5xxx devices"
-  create_udev_rules_file /etc/udev/rules.d/99-displaylink.rules
+  create_udev_rules_file /etc/udev/rules.d/99-displaylink.rules $displaylink_bootstrap_script
   udevadm control -R
   udevadm trigger
 }
@@ -109,9 +109,25 @@
   chmod 0644 /etc/init/dlm.conf
 }
 
+get_systemd_service_file()
+{
+  if which lsb_release >/dev/null; then
+    local R=$(lsb_release -d -s)
+    local R=${R#\"}
+    if [ -z "${R##openSUSE Tumbleweed*}" ]; then
+      echo "/etc/systemd/system/dlm.service"
+      return
+    fi
+  fi
+
+  echo "/lib/systemd/system/dlm.service"
+  return
+}
+
 add_systemd_service()
 {
-  cat > /lib/systemd/system/dlm.service <<'EOF'
+  local ServiceFile=$(get_systemd_service_file)
+  cat > ${ServiceFile} <<'EOF'
 [Unit]
 Description=DisplayLink Manager Service
 After=display-manager.service
@@ -126,7 +142,8 @@
 
 EOF
 
-  chmod 0644 /lib/systemd/system/dlm.service
+  chmod 0644 ${ServiceFile}
+  systemctl enable dlm.service
 }
 
 remove_upstart_script()
@@ -136,8 +153,24 @@
 
 remove_systemd_service()
 {
+  local ServiceFile=$(get_systemd_service_file)
   systemctl disable dlm.service
-  rm -f /lib/systemd/system/dlm.service
+  rm -f ${ServiceFile}
+}
+
+get_pm_script()
+{
+  if which lsb_release >/dev/null; then
+    local R=$(lsb_release -d -s)
+    local R=${R#\"}
+    if [ -z "${R##openSUSE Tumbleweed*}" ]; then
+      echo "/usr/lib/systemd/system-sleep/displaylink.sh"
+      return
+    fi
+  fi
+
+  echo "/lib/systemd/system-sleep/displaylink.sh"
+  return
 }
 
 add_pm_script()
@@ -208,14 +241,14 @@
     ln -sf $COREDIR/suspend.sh /etc/pm/sleep.d/displaylink.sh
   elif [ "$1" = "systemd" ]
   then
-    ln -sf $COREDIR/suspend.sh /lib/systemd/system-sleep/displaylink.sh
+    ln -sf $COREDIR/suspend.sh $(get_pm_script)
   fi
 }
 
 remove_pm_scripts()
 {
   rm -f /etc/pm/sleep.d/displaylink.sh
-  rm -f /lib/systemd/system-sleep/displaylink.sh
+  rm -f $(get_pm_script)
 }
 
 cleanup()
@@ -354,7 +387,17 @@
   version_lt "$KVER" "$KVER_MIN" && missing_requirement "Kernel version $KVER is too old. At least $KVER_MIN is required"
 
   # Linux headers
-  [ ! -f "/lib/modules/$KVER/build/Kconfig" ] && missing_requirement "Linux headers for running kernel, $KVER"
+  if which lsb_release >/dev/null; then
+    local R=$(lsb_release -d -s)
+    local R=${R#\"}
+    if [ -z "${R##openSUSE Tumbleweed*}" ]; then
+      [ ! -f "/lib/modules/$KVER/build/Makefile" ] && missing_requirement "Linux headers for running kernel, $KVER"
+    else
+      [ ! -f "/lib/modules/$KVER/build/Kconfig" ] && missing_requirement "Linux headers for running kernel, $KVER"
+    fi
+  else
+    [ ! -f "/lib/modules/$KVER/build/Kconfig" ] && missing_requirement "Linux headers for running kernel, $KVER"
+  fi
 }
 
 usage()
@@ -389,10 +432,14 @@
 {
   if which lsb_release >/dev/null; then
     local R=$(lsb_release -d -s)
+    local R=${R#\"}
     echo "Distribution discovered: $R"
     [ -z "${R##Ubuntu 14.*}" ] && return
     [ -z "${R##Ubuntu 15.*}" ] && return
     [ -z "${R##Ubuntu 16.04*}" ] && return
+    if [ -z "${R##openSUSE Tumbleweed*}" ]; then
+      SYSTEMINITDAEMON="systemd"
+    fi
   else
     echo "WARNING: This is not an officially supported distribution." >&2
     echo "Please use DisplayLink Forum for getting help if you find issues." >&2
